#version: '3.8'

services:

  go2-db-pg:
    image: postgres
    container_name: go2-pg
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: qwerty1
      POSTGRES_DB: go2
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  go2-pg-admin:
    image: dpage/pgadmin4
    container_name: go2-pg-admin
    ports:
      - "5451:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@user.com
      PGADMIN_DEFAULT_PASSWORD: qwerty1

  go2-mongodb:
    image: mongo:7.0.5-jammy
    container_name: go2-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: qwerty1
      MONGO_INITDB_DATABASE: go2_kitchen

  go2-rabbit:
    image: rabbitmq:3.13-management
    container_name: go2-rabbit
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3

  go2-kitchen:
    build:
      context: /home/dmitrii/projects/go2-kitchen
    container_name: go2-kitchen
    environment:
      DOT_ENV_FILE_NAME: docker.env
    depends_on:
      - go2-mongodb
      - go2-rabbit

  go2-manager:
    build:
      context: ./manager
#      dockerfile: ./manager/Dockerfile
    container_name: go2-manager
    ports:
      - "9010:9010"
    environment:
      DOT_ENV_FILE_NAME: docker.env
    depends_on:
      go2-db-pg:
        condition: service_healthy

  go2-waiter:
    build:
      context: ./waiter
    container_name: go2-waiter
    environment:
      DOT_ENV_FILE_NAME: docker.env
    depends_on:
      go2-rabbit:
        condition: service_healthy

  go2-client:
    build:
      context: ./client
    container_name: go2-client
    environment:
      DOT_ENV_FILE_NAME: docker.env
    depends_on:
      go2-rabbit:
        condition: service_healthy



